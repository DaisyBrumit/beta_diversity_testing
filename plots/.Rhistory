x <- verbose_df(r.acc)
View(x)
py.acc <- rm_dups(py.acc)
py.r2 <- rm_dups(py.r2)
py.roc <- rm_dups(py.roc)
py.df <- py.acc
r.df <- r.acc
metric = 'acc'
py.df <- py.df %>%
arrange(X1, X2)
r.df <- r.df %>%
arrange(X1, X2)
View(py.df)
# Merge the two dataframes on X1 and X2
merged_df <- py.df %>%
inner_join(r.df, by = c("X1", "X2"), suffix = c("_py", "_r"))
View(merged_df)
View(r.df)
View(py.df)
# Merge the two dataframes on X1 and X2
merged_df <- py.df %>%
outer_join(r.df, by = c("X1", "X2"), suffix = c("_py", "_r"))
# Merge the two dataframes on X1 and X2
merged_df <- py.df %>%
full_join(r.df, by = c("X1", "X2"), suffix = c("_py", "_r"))
View(merged_df)
py.acc <- verbose_df(py.acc)
py.r2 <- verbose_df(py.r2)
py.roc <- verbose_df(py.roc)
r.acc <- verbose_df(r.acc)
r.roc <- verbose_df(r.roc)
r.r2 <- verbose_df(r.r2)
py.df <- py.acc
r.df <- r.acc
py.df <- py.df %>%
arrange(X1, X2)
r.df <- r.df %>%
arrange(X1, X2)
# Merge the two dataframes on X1 and X2
merged_df <- py.df %>%
inner_join(r.df, by = c("X1", "X2"), suffix = c("_py", "_r"))
View(merged_df)
ggplot(merged_df, aes(x = value_py, y = value_r)) +
geom_point() +
labs(
title = paste("Comparison of py and r", metric ,"values"),
x = "py value",
y = "r value"
) +
theme_minimal()
# FOR COMPARING PY AND R POST HOC PVALUES
pvp <- function(py.df, r.df, metric) {
py.df <- py.df %>%
arrange(X1, X2)
r.df <- r.df %>%
arrange(X1, X2)
# Merge the two dataframes on X1 and X2
merged_df <- py.df %>%
inner_join(r.df, by = c("X1", "X2"), suffix = c("_py", "_r"))
ggplot(merged_df, aes(x = value_py, y = value_r)) +
geom_point() +
labs(
title = paste("Comparison of py and r", metric ,"values"),
x = "py value",
y = "r value"
) +
theme_minimal()
}
pvp(py.r2,r.r2,'r2')
pvp(py.roc,r.roc,'roc')
rm(list=ls())
filepath <- '~/beta_diversity_testing_almost_final/plots/metaMLTable.tsv'
df <- read_table(filepath)
metric.list <- c('accuracy','roc','r2')
itme <- metric.list[1]
tmp.df <- df %>% filter(metric == item) %>% drop_na()
plt <- ggplot(data=tmp.df,aes(x=beta,y=value)) + geom_boxplot() +
labs(title=paste('knn',item))
print(plt)
tmp.df <- df %>% filter(metric == item) %>% drop_na()
itmem <- metric.list[1]
item <- metric.list[1]
rm (itmem)
rm(itme)
tmp.df <- df %>% filter(metric == item) %>% drop_na()
dtest <- dunnTest(value~beta, data = tmp.df, method = 'bh')
dtest <- dtest$res
plot.df <- dtest %>%
mutate(X1 = str_trim(str_extract(Comparison, "^[^\\-]+")),
X2 = str_trim(str_extract(Comparison, "[^-]+$")),
value = P.adj) %>%
select(X1, X2, value)
# FOR EXPANDING AND FILLING A WHOLE HEATMAP
verbose_df <- function(df){
items <- unique(c(df$X1, df$X2))
all_pairs <- expand.grid(X1 = items, X2 = items)
merged_df <- all_pairs %>%
left_join(df, by = c("X1", "X2")) %>%
left_join(df, by = c("X1" = "X2", "X2" = "X1"), suffix = c("", ".mirror")) %>%
mutate(value = coalesce(value, value.mirror, ifelse(X1 == X2, 1, NA))) %>%
select(X1, X2, value)
return(merged_df)
}
plot.df <- verbose_df(plot.df)
plot.df <- plot.df %>%
mutate(X1 = X1,
X2 = X2,
value = value,
rounded = round(value,4),
sig = case_when(
value < 0.01 ~ '**',
value < 0.05 ~ '*',
TRUE ~ ''
))
plot.df$X1 <- factor(plot.df$X1,
levels=c('bray_curtis','jaccard','unweighted_unifrac','weighted_unifrac',
'ctf','phylo_ctf','rpca','phylo_rpca'))
plot.df$X2 <- factor(plot.df$X2,
levels=c('bray_curtis','jaccard','unweighted_unifrac','weighted_unifrac',
'ctf','phylo_ctf','rpca','phylo_rpca'))
if (item=='r2') {lower.lim=-1
} else{lower.lim=0}
plt <- ggplot(plot.df, aes(x=X1, y=X2, fill=value)) +
geom_tile() +
geom_text(aes(label=rounded),color='white',size=2)+
theme(axis.text.x = element_text(angle=90, vjust = 0.3)) +
labs(title=item)
print(plt)
item <- metric.list[3]
tmp.df <- df %>% filter(metric == item) %>% drop_na()
dtest <- dunnTest(value~beta, data = tmp.df, method = 'bh')
dtest <- dtest$res
plot.df <- dtest %>%
mutate(X1 = str_trim(str_extract(Comparison, "^[^\\-]+")),
X2 = str_trim(str_extract(Comparison, "[^-]+$")),
value = P.adj) %>%
select(X1, X2, value)
plot.df <- verbose_df(plot.df)
plot.df <- plot.df %>%
mutate(X1 = X1,
X2 = X2,
value = value,
rounded = round(value,4),
sig = case_when(
value < 0.01 ~ '**',
value < 0.05 ~ '*',
TRUE ~ ''
))
plot.df$X1 <- factor(plot.df$X1,
levels=c('bray_curtis','jaccard','unweighted_unifrac','weighted_unifrac',
'ctf','phylo_ctf','rpca','phylo_rpca'))
plot.df$X2 <- factor(plot.df$X2,
levels=c('bray_curtis','jaccard','unweighted_unifrac','weighted_unifrac',
'ctf','phylo_ctf','rpca','phylo_rpca'))
if (item=='r2') {lower.lim=-1
} else{lower.lim=0}
plt <- ggplot(plot.df, aes(x=X1, y=X2, fill=value)) +
geom_tile() +
geom_text(aes(label=rounded),color='white',size=2)+
theme(axis.text.x = element_text(angle=90, vjust = 0.3)) +
labs(title=item)
print(plt)
item <- metric.list2
item <- metric.list[2]
tmp.df <- df %>% filter(metric == item) %>% drop_na()
dtest <- dunnTest(value~beta, data = tmp.df, method = 'bh')
dtest <- dtest$res
plot.df <- dtest %>%
mutate(X1 = str_trim(str_extract(Comparison, "^[^\\-]+")),
X2 = str_trim(str_extract(Comparison, "[^-]+$")),
value = P.adj) %>%
select(X1, X2, value)
plot.df <- verbose_df(plot.df)
plot.df <- plot.df %>%
mutate(X1 = X1,
X2 = X2,
value = value,
rounded = round(value,4),
sig = case_when(
value < 0.01 ~ '**',
value < 0.05 ~ '*',
TRUE ~ ''
))
plot.df$X1 <- factor(plot.df$X1,
levels=c('bray_curtis','jaccard','unweighted_unifrac','weighted_unifrac',
'ctf','phylo_ctf','rpca','phylo_rpca'))
plot.df$X2 <- factor(plot.df$X2,
levels=c('bray_curtis','jaccard','unweighted_unifrac','weighted_unifrac',
'ctf','phylo_ctf','rpca','phylo_rpca'))
if (item=='r2') {lower.lim=-1
} else{lower.lim=0}
plt <- ggplot(plot.df, aes(x=X1, y=X2, fill=value)) +
geom_tile() +
geom_text(aes(label=rounded),color='white',size=2)+
theme(axis.text.x = element_text(angle=90, vjust = 0.3)) +
labs(title=item)
print(plt)
rm(list=ls())
setwd('~/beta_diversity_testing_almost_final/plots')
library(tidyverse)
library(reshape)
files <- list.files('.','rf_post_hoc')
for (file in files){
metric <- strsplit(file,'_')[[1]][3]
tmp.df <- read.table(file) %>% as.matrix()
rownames(tmp.df) <- colnames(tmp.df)
plot.df <- melt(tmp.df)
plot.df <- plot.df %>% mutate(X1=X1, X2=X2, value=value, rounded = round(value,4),
sig=ifelse(value<0.05,'*',''))
plot.df$X1 <- factor(plot.df$X1,
levels=c('bray_curtis','jaccard','unweighted_unifrac','weighted_unifrac',
'ctf','phylo_ctf','rpca','phylo_rpca'))
plot.df$X2 <- factor(plot.df$X2,
levels=c('bray_curtis','jaccard','unweighted_unifrac','weighted_unifrac',
'ctf','phylo_ctf','rpca','phylo_rpca'))
plt <- ggplot(plot.df, aes(x=X1, y=X2, fill=value)) +
geom_tile() +
geom_text(aes(label=rounded),color='white',size=2)+
theme(axis.text.x = element_text(angle=90, vjust = 0.3)) +
labs(title=metric)
print(plt)
}
### function for minute cleaning
rm_dups <- function(df) {
df_cleaned <- df %>%
filter(X1 != X2) %>%
# Create a new column that orders the pairs alphabetically
mutate(pair = pmap_chr(list(X1, X2), ~ paste(sort(c(...)), collapse = "-"))) %>%
# Remove duplicate pairs
distinct(pair, .keep_all = TRUE) %>%
# Drop the pair column as it is no longer needed
select(-pair)
# View the cleaned dataframe
return(df_cleaned)
}
rm(list=ls())
setwd('~/beta_diversity_testing_almost_final/plots')
library(tidyverse)
library(reshape)
files <- list.files('.','rf_post_hoc')
for (file in files){
metric <- strsplit(file,'_')[[1]][4]
tmp.df <- read.table(file) %>% as.matrix()
rownames(tmp.df) <- colnames(tmp.df)
plot.df <- melt(tmp.df)
plot.df <- plot.df %>% mutate(X1=X1, X2=X2, value=value, rounded = round(value,4),
sig=ifelse(value<0.05,'*',''))
plot.df$X1 <- factor(plot.df$X1,
levels=c('bray_curtis','jaccard','unweighted_unifrac','weighted_unifrac',
'ctf','phylo_ctf','rpca','phylo_rpca'))
plot.df$X2 <- factor(plot.df$X2,
levels=c('bray_curtis','jaccard','unweighted_unifrac','weighted_unifrac',
'ctf','phylo_ctf','rpca','phylo_rpca'))
plt <- ggplot(plot.df, aes(x=X1, y=X2, fill=value)) +
geom_tile() +
geom_text(aes(label=rounded),color='white',size=2)+
theme(axis.text.x = element_text(angle=90, vjust = 0.3)) +
labs(title=metric)
print(plt)
}
### function for minute cleaning
rm_dups <- function(df) {
df_cleaned <- df %>%
filter(X1 != X2) %>%
# Create a new column that orders the pairs alphabetically
mutate(pair = pmap_chr(list(X1, X2), ~ paste(sort(c(...)), collapse = "-"))) %>%
# Remove duplicate pairs
distinct(pair, .keep_all = TRUE) %>%
# Drop the pair column as it is no longer needed
select(-pair)
# View the cleaned dataframe
return(df_cleaned)
}
rm(list=ls())
filepath <- '~/beta_diversity_testing_almost_final/plots/rf_metaMLTable.tsv'
df <- read_table(filepath)
metric.list <- c('accuracy','roc','r2')
item <- metric.list[1]
tmp.df <- df %>% filter(metric == item) %>% drop_na()
plt <- ggplot(data=tmp.df,aes(x=beta,y=value)) + geom_boxplot() +
labs(title=paste('knn',item))
print(plt)
plt <- ggplot(data=tmp.df,aes(x=beta,y=value)) + geom_boxplot() +
labs(title=paste('rf',item))
print(plt)
kwtest <- kruskal.test(value ~ beta, data = tmp.df)
kwtest$p.value
dtest <- dunnTest(value~beta, data = tmp.df, method = 'bh')
dtest <- dtest$res
plot.df <- dtest %>%
mutate(X1 = str_trim(str_extract(Comparison, "^[^\\-]+")),
X2 = str_trim(str_extract(Comparison, "[^-]+$")),
value = P.adj) %>%
select(X1, X2, value)
# FOR COMPARING PY AND R POST HOC PVALUES
pvp <- function(py.df, r.df, metric) {
py.df <- py.df %>%
arrange(X1, X2)
r.df <- r.df %>%
arrange(X1, X2)
# Merge the two dataframes on X1 and X2
merged_df <- py.df %>%
inner_join(r.df, by = c("X1", "X2"), suffix = c("_py", "_r"))
ggplot(merged_df, aes(x = value_py, y = value_r)) +
geom_point() +
labs(
title = paste("Comparison of py and r", metric ,"values"),
x = "py value",
y = "r value"
) +
theme_minimal()
}
# FOR EXPANDING AND FILLING A WHOLE HEATMAP
verbose_df <- function(df){
items <- unique(c(df$X1, df$X2))
all_pairs <- expand.grid(X1 = items, X2 = items)
merged_df <- all_pairs %>%
left_join(df, by = c("X1", "X2")) %>%
left_join(df, by = c("X1" = "X2", "X2" = "X1"), suffix = c("", ".mirror")) %>%
mutate(value = coalesce(value, value.mirror, ifelse(X1 == X2, 1, NA))) %>%
select(X1, X2, value)
return(merged_df)
}
plot.df <- verbose_df(plot.df)
plot.df <- plot.df %>%
mutate(X1 = X1,
X2 = X2,
value = value,
rounded = round(value,4),
sig = case_when(
value < 0.01 ~ '**',
value < 0.05 ~ '*',
TRUE ~ ''
))
plot.df$X1 <- factor(plot.df$X1,
levels=c('bray_curtis','jaccard','unweighted_unifrac','weighted_unifrac',
'ctf','phylo_ctf','rpca','phylo_rpca'))
plot.df$X2 <- factor(plot.df$X2,
levels=c('bray_curtis','jaccard','unweighted_unifrac','weighted_unifrac',
'ctf','phylo_ctf','rpca','phylo_rpca'))
if (item=='r2') {lower.lim=-1
} else{lower.lim=0}
plt <- ggplot(plot.df, aes(x=X1, y=X2, fill=value)) +
geom_tile() +
geom_text(aes(label=rounded),color='white',size=2)+
theme(axis.text.x = element_text(angle=90, vjust = 0.3)) +
labs(title=item)
print(plt)
item <- metric.list[2]
tmp.df <- df %>% filter(metric == item) %>% drop_na()
plt <- ggplot(data=tmp.df,aes(x=beta,y=value)) + geom_boxplot() +
labs(title=paste('rf',item))
print(plt)
kwtest <- kruskal.test(value ~ beta, data = tmp.df)
kwtest$p.value
dtest <- dunnTest(value~beta, data = tmp.df, method = 'bh')
dtest <- dtest$res
plot.df <- dtest %>%
mutate(X1 = str_trim(str_extract(Comparison, "^[^\\-]+")),
X2 = str_trim(str_extract(Comparison, "[^-]+$")),
value = P.adj) %>%
select(X1, X2, value)
plot.df <- verbose_df(plot.df)
plot.df <- plot.df %>%
mutate(X1 = X1,
X2 = X2,
value = value,
rounded = round(value,4),
sig = case_when(
value < 0.01 ~ '**',
value < 0.05 ~ '*',
TRUE ~ ''
))
plot.df$X1 <- factor(plot.df$X1,
levels=c('bray_curtis','jaccard','unweighted_unifrac','weighted_unifrac',
'ctf','phylo_ctf','rpca','phylo_rpca'))
plot.df$X2 <- factor(plot.df$X2,
levels=c('bray_curtis','jaccard','unweighted_unifrac','weighted_unifrac',
'ctf','phylo_ctf','rpca','phylo_rpca'))
if (item=='r2') {lower.lim=-1
} else{lower.lim=0}
plt <- ggplot(plot.df, aes(x=X1, y=X2, fill=value)) +
geom_tile() +
geom_text(aes(label=rounded),color='white',size=2)+
theme(axis.text.x = element_text(angle=90, vjust = 0.3)) +
labs(title=item)
print(plt)
item <- metric.list[3]
tmp.df <- df %>% filter(metric == item) %>% drop_na()
plt <- ggplot(data=tmp.df,aes(x=beta,y=value)) + geom_boxplot() +
labs(title=paste('rf',item))
print(plt)
kwtest <- kruskal.test(value ~ beta, data = tmp.df)
kwtest$p.value
dtest <- dunnTest(value~beta, data = tmp.df, method = 'bh')
dtest <- dtest$res
plot.df <- dtest %>%
mutate(X1 = str_trim(str_extract(Comparison, "^[^\\-]+")),
X2 = str_trim(str_extract(Comparison, "[^-]+$")),
value = P.adj) %>%
select(X1, X2, value)
plot.df <- verbose_df(plot.df)
plot.df <- plot.df %>%
mutate(X1 = X1,
X2 = X2,
value = value,
rounded = round(value,4),
sig = case_when(
value < 0.01 ~ '**',
value < 0.05 ~ '*',
TRUE ~ ''
))
plot.df$X1 <- factor(plot.df$X1,
levels=c('bray_curtis','jaccard','unweighted_unifrac','weighted_unifrac',
'ctf','phylo_ctf','rpca','phylo_rpca'))
plot.df$X2 <- factor(plot.df$X2,
levels=c('bray_curtis','jaccard','unweighted_unifrac','weighted_unifrac',
'ctf','phylo_ctf','rpca','phylo_rpca'))
if (item=='r2') {lower.lim=-1
} else{lower.lim=0}
plt <- ggplot(plot.df, aes(x=X1, y=X2, fill=value)) +
geom_tile() +
geom_text(aes(label=rounded),color='white',size=2)+
theme(axis.text.x = element_text(angle=90, vjust = 0.3)) +
labs(title=item)
print(plt)
rm(list=ls())
# FOR COMPARING PY AND R POST HOC PVALUES
pvp <- function(py.df, r.df, metric) {
py.df <- py.df %>%
arrange(X1, X2)
r.df <- r.df %>%
arrange(X1, X2)
# Merge the two dataframes on X1 and X2
merged_df <- py.df %>%
inner_join(r.df, by = c("X1", "X2"), suffix = c("_py", "_r"))
ggplot(merged_df, aes(x = value_py, y = value_r)) +
geom_point() +
labs(
title = paste("Comparison of py and r", metric ,"values"),
x = "py value",
y = "r value"
) +
theme_minimal()
}
# FOR EXPANDING AND FILLING A WHOLE HEATMAP
verbose_df <- function(df){
items <- unique(c(df$X1, df$X2))
all_pairs <- expand.grid(X1 = items, X2 = items)
merged_df <- all_pairs %>%
left_join(df, by = c("X1", "X2")) %>%
left_join(df, by = c("X1" = "X2", "X2" = "X1"), suffix = c("", ".mirror")) %>%
mutate(value = coalesce(value, value.mirror, ifelse(X1 == X2, 1, NA))) %>%
select(X1, X2, value)
return(merged_df)
}
filepath <- '~/beta_diversity_testing_almost_final/plots/rf_metaMLTable.tsv'
df <- read_table(filepath)
metric.list <- c('accuracy','roc','r2')
item <- metric.list[1]
tmp.df <- df %>% filter(metric == item) %>% drop_na()
dtest <- dunnTest(value~beta, data = tmp.df, method = 'bh')
dtest <- dtest$res
plot.df <- dtest %>%
mutate(X1 = str_trim(str_extract(Comparison, "^[^\\-]+")),
X2 = str_trim(str_extract(Comparison, "[^-]+$")),
value = P.adj) %>%
select(X1, X2, value)
r.acc <- verbose_df(plot.df)
item <- metric.list[2]
tmp.df <- df %>% filter(metric == item) %>% drop_na()
dtest <- dunnTest(value~beta, data = tmp.df, method = 'bh')
dtest <- dtest$res
plot.df <- dtest %>%
mutate(X1 = str_trim(str_extract(Comparison, "^[^\\-]+")),
X2 = str_trim(str_extract(Comparison, "[^-]+$")),
value = P.adj) %>%
select(X1, X2, value)
r.roc <- verbose_df(plot.df)
item <- metric.list[3]
tmp.df <- df %>% filter(metric == item) %>% drop_na()
dtest <- dunnTest(value~beta, data = tmp.df, method = 'bh')
dtest <- dtest$res
plot.df <- dtest %>%
mutate(X1 = str_trim(str_extract(Comparison, "^[^\\-]+")),
X2 = str_trim(str_extract(Comparison, "[^-]+$")),
value = P.adj) %>%
select(X1, X2, value)
r.r2 <- verbose_df(plot.df)
setwd('~/beta_diversity_testing_almost_final/plots')
files <- list.files('.','rf_post_hoc')
file <- files[1]
metric <- strsplit(file,'_')[[1]][4]
tmp.df <- read.table(file) %>% as.matrix()
rownames(tmp.df) <- colnames(tmp.df)
plot.df <- melt(tmp.df)
py.acc <- plot.df
file <- files[2]
tmp.df <- read.table(file) %>% as.matrix()
rownames(tmp.df) <- colnames(tmp.df)
plot.df <- melt(tmp.df)
py.r2 <- plot.df
file <- files[3]
tmp.df <- read.table(file) %>% as.matrix()
rownames(tmp.df) <- colnames(tmp.df)
plot.df <- melt(tmp.df)
py.roc <- plot.df
pvp(py.acc, r.acc, 'acc')
pvp(py.r2, r.r2, 'r2')
pvp(py.roc, r.roc, 'roc')
rm(list=ls())
dev.off()
